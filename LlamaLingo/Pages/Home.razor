@page "/Home"
@using Microsoft.EntityFrameworkCore
@using Syncfusion.Blazor.DropDowns
@inject LlamaLingo.Models.DbContext db;

<div class="page-heading">
	<h3 class="header">Llama Lingo</h3>
    <div class="dropdown">
		<p>ID #: </p>
		<SfDropDownList TItem="Person" TValue="string" PopupHeight="230px" Placeholder="Select..." DataSource="@people" AllowFiltering="true">
			<DropDownListEvents TItem="Person" TValue="string" ValueChange="ChangePerson" />
			<DropDownListFieldSettings Text="PersonId" Value="PersonId" />
		</SfDropDownList>
	</div>
    <div class="dropdown">
		<p>POD #: </p>
        <SfDropDownList Enabled="@EnablePodDropDown" TItem="Pod" TValue="string" PopupHeight="230px" Placeholder="Select..." DataSource="@pods" AllowFiltering="true">
			<DropDownListEvents TItem="Pod" TValue="string" ValueChange="ChangePod" />
			<DropDownListFieldSettings Text="PodId" Value="PodId" />
		</SfDropDownList>
	</div>
</div>

@* <div class="content-box shadow">
    <p>@selectedPod.PodId</p>
    <p>@selectedPod.PodLabel</p>
    <p>@selectedPod.PodDescription</p>
    <p>@selectedPod.PodUrlBase</p>
</div> *@


@code {
    private bool IsLoading { get; set; } = true;

    private bool EnablePodDropDown = false;

    private List<Person> people;

    private List<Pod> pods;

    private Pod selectedPod = new Pod();

    protected override async System.Threading.Tasks.Task OnInitializedAsync()
    {
        try
        {
            people = await getPeople();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }

        IsLoading = false;
    }

    public async System.Threading.Tasks.Task<List<Person>> getPeople()
    {
        //Create a list containing all of the Person_IDs in the Person Table.
        List<Person> people = await db.Set<Person>().ToListAsync();

        return people;
    }

    public async System.Threading.Tasks.Task<List<Pod>> getPods(int personId)
    {
        //Create a list containing all of the POD Ids that a person can access.
        List<Pod> pods = await db.Pods.Where(p => p.PersonIdFk == personId).ToListAsync();

        return pods;
    }

    public async void ChangePerson(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, Person> args)
    {
        EnablePodDropDown = false;

        try
        {
            pods = await getPods(args.ItemData.PersonId);
            
            EnablePodDropDown = !string.IsNullOrEmpty(args.Value);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }

        StateHasChanged();
    }

    public void ChangePod(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, Pod> args)
    {
        selectedPod = args.ItemData;
    }
}
